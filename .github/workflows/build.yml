name: PyInstaller
on:
  push:
    branches: dev

jobs:
  build-windows:
    runs-on: [ windows-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x64
      - name: Pip Installer
        uses: BSFishy/pip-action@v1
        with:
          packages: pyinstaller
          requirements: requirements.txt
      - name: build with pyinstaller
        run: |
          pyinstaller -F .\cli.py --name colony
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Colony Cli Binary
          path: dist\colony.exe

  create-release:
    name: Create Release Entry
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Get All Artifacts
        uses: actions/download-artifact@v2
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./dist/colony.exe
          asset_name: my-colony-cli.zip
          asset_content_type: application/zip
